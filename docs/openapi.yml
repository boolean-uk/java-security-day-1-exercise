openapi: 3.1.0
info:
  title: Java Security Day 1 Exercise
  description: Core and Extension Criteria for the Java Security Day 1 Exercise
  version: 0.2.3
  contact:
    name: Java Security Day 1 Exercise

servers:
  - url: http://localhost:4000
tags:
  - name: games
  - name: users
  - name: loans
paths:
  /games:
    post:
      tags:
        - games
      summary: Create a game
      description: Create a new game account.
      operationId: createGame
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGame'
      responses:
        '201':
          description: Successfully created a new game
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
    get:
      tags:
        - games
      summary: Get all games
      description: Get a list of every game.
      operationId: getGames
      responses:
        '200':
          description: Get a list of all games
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllGames'
  /games/{id}:
    put:
      tags:
        - games
      summary: Update a game
      description: Update an existing game. Any combination of fields may be provided.
      operationId: updateGame
      parameters:
        - name: id
          in: path
          description: The ID of the game to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGame'
      responses:
        '201':
          description: Successfully updated the specified game
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
    delete:
      tags:
        - games
      summary: Delete a game
      description: Delete an existing game.
      operationId: deleteGame
      parameters:
        - name: id
          in: path
          description: The ID of the game to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully deleted the specified game
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'

  /users:
    post:
      tags:
        - users
      summary: Create a user
      description: Create a new user.
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
      responses:
        '201':
          description: Successfully created a new User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    get:
      tags:
        - users
      summary: Get all users
      description: Get a list of every user.
      operationId: getUsers
      responses:
        '200':
          description: Successfully returned a list of all users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUsers'
  /users/{id}:
    put:
      tags:
        - users
      summary: Update a user
      description: Update an existing user. Any combination of fields may be provided
      operationId: updateUser
      parameters:
        - name: id
          in: path
          description: The ID of the user to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
      responses:
        '201':
          description: Successfully updated the specified user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      tags:
        - users
      summary: Delete a user
      description: Delete an existing user.
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          description: The ID of the user to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully deleted the specified user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/{userId}/games/{gameId}:
    post:
      tags:
        - loans
      summary: Create a loan
      description: Create a loan for a particular user and game.
      operationId: createLoan
      parameters:
        - name: userId
          in: path
          description: The ID of the user to create the loan for
          required: true
          schema:
            type: integer
        - name: gameId
          in: path
          description: The ID of the game to create the loan for
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLoan'
      responses:
        '201':
          description: Successfully created a loan for the specified user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
    get:
      tags:
        - loans
      summary: Get all loans
      description: Get loans for a particular user and game.
      operationId: getLoans
      parameters:
        - name: userId
          in: path
          description: The ID of the user to get the loans of
          required: true
          schema:
            type: integer
        - name: gameId
          in: path
          description: The ID of the game to get the loans of
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully returned a list of all loans of the specified user and game
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllLoans'
  /users/{id}/loans:
    get:
      tags:
        - loans
      summary: Get all loans
      description: Get a list of every loan for a user.
      operationId: getUserLoans
      parameters:
        - name: id
          in: path
          description: The ID of the user to retrieve the loans for
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully returned a list of all loans of the specified user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUserLoans'
  /games/{id}/loans:
    get:
      tags:
        - loans
      summary: Get all loans
      description: Get a list of every loan for a game.
      operationId: getGameLoans
      parameters:
        - name: id
          in: path
          description: The ID of the game to retrieve the loans for
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully returned a list of all loans of the specified game
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllGameLoans'
components:
  schemas:
    CreateGame:
      type: object
      required: [title, gameStudio, ageRating, numberOfPlayers, genre]
      properties:
        title:
          type: string
          example: "The Last of Us"
        gameStudio:
          type: string
          example: "Naughty Dog"
        ageRating:
          type: string
          example: "18"
        numberOfPlayers:
          type: integer
          example: 1
        genre:
          type: string
          example: "Survival horror"
    Game:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: "The Last of Us"
        gameStudio:
          type: string
          example: "Naughty Dog"
        ageRating:
          type: string
          example: "18"
        numberOfPlayers:
          type: integer
          example: 1
        genre:
          type: string
          example: "Survival horror"
        createdAt:
          type: string
          format: DateTime
          example: "2023-03-14T11:01:56.633+00:00"
        updatedAt:
          type: string
          format: DateTime
          example: "2023-03-14T11:01:56.633+00:00"
    AllGames:
      type: array
      items:
        $ref: '#/components/schemas/Game'

    CreateUser:
      type: object
      required: [ name, phone, email]
      properties:
        name:
          type: string
          example: "Jane Doe"
        phone:
          type: string
          example: "+123456789"
        email:
          type: string
          example: "jane@doe.com"
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Jane Doe"
        phone:
          type: string
          example: "+123456789"
        email:
          type: string
          example: "jane@doe.com"
        createdAt:
          type: string
          format: DateTime
          example: "2023-03-14T11:01:56.633+00:00"
        updatedAt:
          type: string
          format: DateTime
          example: "2023-03-14T11:01:56.633+00:00"
    AllUsers:
      type: array
      items:
        $ref: '#/components/schemas/User'

    CreateLoan:
      type: object
      required: [ active ]
      properties:
        active:
          type: boolean
          example: true
    Loan:
      type: object
      properties:
        id:
          type: integer
          example: 1
        active:
          type: boolean
          example: true
        createdAt:
          type: string
          format: DateTime
          example: "2023-03-14T11:01:56.633+00:00"
        updatedAt:
          type: string
          format: DateTime
          example: "2023-03-14T11:01:56.633+00:00"
    UserLoan:
      type: object
      properties:
        id:
          type: integer
          example: 1
        active:
          type: boolean
          example: true
        game:
          $ref: '#/components/schemas/Game'
        createdAt:
          type: string
          format: DateTime
          example: "2023-03-14T11:01:56.633+00:00"
        updatedAt:
          type: string
          format: DateTime
          example: "2023-03-14T11:01:56.633+00:00"
    GameLoan:
      type: object
      properties:
        id:
          type: integer
          example: 1
        active:
          type: boolean
          example: true
        user:
          $ref: '#/components/schemas/User'
        createdAt:
          type: string
          format: DateTime
          example: "2023-03-14T11:01:56.633+00:00"
        updatedAt:
          type: string
          format: DateTime
          example: "2023-03-14T11:01:56.633+00:00"
    AllGameLoans:
      type: array
      items:
        $ref: '#/components/schemas/GameLoan'
    AllUserLoans:
      type: array
      items:
        $ref: '#/components/schemas/UserLoan'
    AllLoans:
      type: array
      items:
        $ref: '#/components/schemas/Loan'