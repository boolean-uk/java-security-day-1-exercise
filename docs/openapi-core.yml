openapi: 3.0.3
info:
  title: Java API Exercise - Core Criteria
  description: Core Criteria for the Java Game Security Challenge
  version: 0.2.2
  contact:
    name: Game Security Challenge

servers:
  - url: http://localhost:4000

tags:
  - name: users
  - name: games

paths:
  /games:
    post:
      tags:
        - games
      summary: Create a game
      description: Create a new game
      operationId: createGame
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGame'
      responses:
        '201':
          description: Successfully created a new game
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'

    get:
      tags:
        - games
      summary: Get all games
      description: Get a list of games
      operationId: getGames
      responses:
        '200':
          description: Get a list of all games
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllGames'

  /games/{id}:
    put:
      tags:
        - games
      summary: Update a game
      description: Update existing game
      operationId: updateGame
      parameters:
        - name: id
          in: path
          description: The ID of the game to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGame'
      responses:
        '201':
          description: Successfully updated the specified game
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'

    delete:
      tags:
        - games
      summary: Delete a game
      description: Delete an existing game
      operationId: deleteGame
      parameters:
        - name: id
          in: path
          description: The ID of the game to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully deleted the specified game
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'

  /users:
    post:
      tags:
        - users
      summary: Create a user
      description: Create a new.
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
      responses:
        '201':
          description: Successfully created a new user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    get:
      tags:
        - users
      summary: Get all users
      description: Get a list of user.
      operationId: getUsers
      responses:
        '200':
          description: Get a list of all users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUsers'
  /users/{id}:
    get:
      tags:
        - users
      summary: Get a user
      description: Get a specific user.
      operationId: getUser
      parameters:
        - name: id
          in: path
          description: The ID of the user to get
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: Successfully get the specified user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      tags:
        - users
      summary: Update a user
      description: Update an existing user
      operationId: updateUser
      parameters:
        - name: id
          in: path
          description: The ID of the user to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
      responses:
        '201':
          description: Successfully updated the specified user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      tags:
        - users
      summary: Delete a user
      description: Delete an existing user
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          description: The ID of the user to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully deleted the specified user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

components:
  schemas:
    CreateGame:
      type: object
      required: [title, gameStudio, ageRating, numberOfPlayer, genre]
      properties:
        title:
          type: string
          example: "Fortnite"
        gameStudio:
          type: string
          example: "Epic Games"
        ageRating:
          type: integer
          example: 13
        numberOfPlayer:
          type: integer
          example: 2
        genre:
          type: string
          example: "Action"

    Game:
      type: object
      properties:
        title:
          type: string
        gameStudio:
          type: string
        ageRating:
          type: integer
        numberOfPlayer:
          type: integer
        genre:
          type: string

    AllGames:
      type: array
      items:
        $ref: '#/components/schemas/Game'
    CreateUser:
      type: object
      required: [ name, email]
      properties:
        name:
          type: string
          example: "John"
        email:
          type: string
          example: "john@gamil.com"

    User:
      type: object
      properties:
        name:
          type: string
        email:
          type: string


    AllUsers:
      type: array
      items:
        $ref: '#/components/schemas/User'
