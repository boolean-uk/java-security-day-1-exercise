openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:4000
  description: Generated server url
paths:
  /users/{id}:
    get:
      tags:
      - user-controller
      operationId: getOneUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
    put:
      tags:
      - user-controller
      operationId: updateUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
    delete:
      tags:
      - user-controller
      operationId: deleteUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /games/{id}:
    get:
      tags:
      - game-controller
      operationId: getOne
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Game'
    put:
      tags:
      - game-controller
      operationId: updateOne
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Game'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Game'
    delete:
      tags:
      - game-controller
      operationId: deleteOne
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Game'
  /users:
    get:
      tags:
      - user-controller
      operationId: getAllUsers
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags:
      - user-controller
      operationId: addUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /users/{userId}/return/{gameId}:
    post:
      tags:
      - user-controller
      operationId: returnGame
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: gameId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /users/{userId}/borrow/{gameId}:
    post:
      tags:
      - user-controller
      operationId: borrowGame
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: gameId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /games:
    get:
      tags:
      - game-controller
      operationId: getAll
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
    post:
      tags:
      - game-controller
      operationId: addOne
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Game'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Game'
  /records/{id}:
    get:
      tags:
      - user-record-controller
      operationId: getUserWithAllPreviousGames
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
components:
  schemas:
    Game:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        gameStudio:
          type: string
        ageRating:
          type: string
        numberOfPlayers:
          type: integer
          format: int32
        genre:
          type: string
        onLoan:
          type: boolean
    User:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        games:
          type: array
          items:
            $ref: '#/components/schemas/Game'
